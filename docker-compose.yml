services:
  web.api:
    container_name: app
    image: web.api:latest
    build:
      context: .
      dockerfile: Web.Api/Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - mssql
      - elasticsearch
      - kafka
      - zookeeper
    environment:
      - DB_HOST=mssql
      - DB_NAME=challenge
      - DB_SA_PASSWORD=passw0rd@12345#
    networks:
      - default-network

  mssql:
    container_name: db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: passw0rd@12345#
      ACCEPT_EULA: Y
      
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    networks:
      - default-network

  elasticsearch:
    container_name: elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - default-network

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.12-2.3.0
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "defaultTopic:1:1"
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - default-network

  zookeeper:
    container_name: zoo
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - default-network

volumes:
  mssql-data:
  kafka-data:

networks:
  default-network:
